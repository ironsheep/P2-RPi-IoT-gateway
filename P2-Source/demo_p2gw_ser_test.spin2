'' =================================================================================================
''
''   File....... demo_p2gw_ser_test.spin2
''   Purpose.... Test our seial link - report errors
''   Authors.... Stephen M Moraco
''               -- Copyright (c) 2022 Iron Sheep Productions, LLC
''               -- see below for terms of use
''   E-mail..... stephen@ironsheep.biz
''   Started.... Feb 2022
''   Updated.... 1 Feb 2022
''
'' =================================================================================================

CON { timing }

  CLK_FREQ = 200_000_000                                        ' system freq as a constant
  _clkfreq = CLK_FREQ                                           ' set system clock

CON { fixed io pins }

  RX1      = 63  { I }                                          ' programming / debug
  TX1      = 62  { O }

  SF_CS    = 61  { O }                                          ' serial flash
  SF_SCK   = 60  { O }
  SF_SDO   = 59  { O }
  SF_SDI   = 58  { I }

CON { RPi Gateway io pins }

  RX_GW    = 25  { I }                                          ' Raspberry Pi (RPi) Gateway
  TX_GW    = 24  { O }

  GW_BAUDRATE = 499_200   ' 500kb/s - allow P2 rx to keep up!

OBJ { Objects Used by this Object }

    IoT_GW      :   "isp_rpi_iot_gw"                            ' serial I/O

DAT { our email and hardware ID strings }

    p2HardwareID    byte    "P2 Edge - GWSerTst",0

CON { TEST VALUES }

    SEND_FIRST_COUNT = True
    NEXT_NEXT_COUNT = False

    COUNT_MESSAGES_TO_SEND = 4

PUB main() | eOpStatus, nRpiErrCt, pRpiMsg, nRPiCt, nP2Ct
    '' DEMO exchange messages with RPi to determine if serial link is OK
    IoT_GW.startx(RX_GW, TX_GW, GW_BAUDRATE)

    ' (one time) tell the RPi about how to identify this hardware
    IoT_GW.identify(@p2HardwareID)

    eOpStatus, nRpiErrCt, pRpiMsg := IoT_GW.sendTestMessage(SEND_FIRST_COUNT)
    if eOpStatus <> IoT_GW.OP_SUCCESS
        ' NOTE error message is returned in {pRpiMsg}
        debug("* main: ERROR Failed to Send Test Message [", zstr_(@pRpiMsg), "]!")
    else
        ' COMPARE 1st RX'd message and report

        repeat COUNT_MESSAGES_TO_SEND - 1  ' we aready did one
            eOpStatus, nRpiErrCt, pRpiMsg := IoT_GW.sendTestMessage(NEXT_NEXT_COUNT)
            if eOpStatus <> IoT_GW.OP_SUCCESS
                debug("* main: Failed to Send Test Message [", zstr_(@pRpiMsg), "]!")
                quit
            ' COMPARE 2-N RX'd message and report
        nRPiCt, nP2Ct := IoT_GW.getErrorCtrs()
        debug("* main: End Test - Error Coutners  RPi-Tx(", udec(nRPiCt), "), P2-Rx(", udec(nP2Ct), ")")


    debug("***  DONE  ***")
     ' terminate communication with our gateway RPi
    IoT_GW.stop()

CON { license }
{{

 -------------------------------------------------------------------------------------------------
  MIT License

  Copyright (c) 2022 Iron Sheep Productions, LLC

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
 =================================================================================================
}}
