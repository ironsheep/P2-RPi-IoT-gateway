'' =================================================================================================
''
''   File....... RPi-IoT-gw.spin2
''   Purpose.... Provide IoT access methods
''   Authors.... Stephen M Moraco
''               -- Copyright (c) 2022 Iron Sheep Productions, LLC
''               -- see below for terms of use
''   E-mail..... stephen@ironsheep.biz
''   Started.... Jan 2022
''   Updated.... 03 Jan 2022
''
'' =================================================================================================

CON { Object Interface: PUBLIC ENUMs }

CON { fixed io pins }

  RX1      = 63  { I }                                          ' programming / debug
  TX1      = 62  { O }

  SF_CS    = 61  { O }                                          ' serial flash
  SF_SCK   = 60  { O }
  SF_SDO   = 59  { O }
  SF_SDI   = 58  { I }

OBJ { Objects Used by this Object }

    RPi         : "jm_serial"                                   ' serial I/O
    nstr        : "jm_nstr"                                     ' number-to-string

VAR { pin info saves }

    long    rx_pin
    long    tx_pin

DAT { string constants }

spin2ver    byte    "0.0.1",0

' -------------------------------
' the following are identical to that found in our deamon python script
'   (!!!they must be kept in sync!!!)
parmSep     byte    "^|^",0     ' chars that will not be found in user data
bodyStart   byte    "emailStart",0
bodyEnd     byte    "emailEnd",0
' -------------------------------

PUB null()
'' This is not a top level object

pub startx(rxpin, txpin, baud)
'' Start RPi gateway serial coms on rxpin and txpin at baud
    rx_pin := rxpin
    tx_pin := txpin
    RPi.startx(rxpin, txpin, baud)                              ' use user serial port

pub stop()
'' release the serial pins (if needed)
    RPi.rxflush()   ' git rid of any pending input
    ' free the pins used
    pinf(rx_pin)    ' de-assert
    pinf(tx_pin)    ' de-assert

pub identify(pHardwareId)
'' tell the RPi the name of this device (for email signature, etc.)
    RPi.fstr3(string("ident:hwName=%s%sobjVer=v%s\n"), pHardwareId, @parmSep, @spin2ver)

pub sendEmail(pEmailTo, pEmailFrom, pEmailSubj, pEmailBody)
'' tell the RPi to send an email given these specifics
    RPi.fstr5(string("email-send:to=%s%sfm=%s%ssu=%s\n"), pEmailTo, @parmSep, pEmailFrom, @parmSep, pEmailSubj)
    RPi.fstr3(string("%s\n%s\n%s\n"), @bodyStart, pEmailBody, @bodyEnd)

pub sendSMS(pSmsPhoneNbr, pSmsTextMessage)
'' tell the RPi to send an SMS text message given these specifics
    RPi.fstr3(string("sms-send:phone=%s%smessage=%s\n"), pSmsPhoneNbr, @parmSep, pSmsTextMessage)

CON { license }

{{
 -------------------------------------------------------------------------------------------------
  MIT License

  Copyright (c) 2022 Iron Sheep Productions, LLC

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
 =================================================================================================
}}
